{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///deferred-di.js","webpack:///webpack/bootstrap 16e0004b60b6655be079","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","pickDeps","moduleNames","allModules","map","name","Error","resolveMap","aMap","resolvers","_loop","key","singleResolver","promise","value","then","v","push","Promise","all","resolver","result","forEach","resolveDeps","modulesNames","length","resolve","e","reject","message","getInjector","modulesRepository","arguments","undefined","clonedRepository","_extends","injector","nextModuleGetter","success","failure","catch","normalizeInjects","injects","split","s","trim","filter","_typeof","Array","ddi","moduleName","moduleInjects","moduleDefinition","ddiGetter","deps","moduleInjectsNormalized","logger","error","resolvedDeps","apply","$inject","Object","defineProperty","Symbol","iterator","obj","constructor","assign","target","i","source","prototype","hasOwnProperty","inject","default"],"mappings":"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","file":"deferred-di.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"deferred-di\"] = factory();\n\telse\n\t\troot[\"deferred-di\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"deferred-di\"] = factory();\n\telse\n\t\troot[\"deferred-di\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tfunction pickDeps(moduleNames, allModules) {\n\t    return moduleNames.map(function (name) {\n\t        if (allModules[name]) {\n\t            return allModules[name];\n\t        } else {\n\t            throw new Error(name + ' cannot be resolved');\n\t        }\n\t    });\n\t}\n\t\n\tfunction resolveMap(aMap) {\n\t    var resolvers = [];\n\t\n\t    var _loop = function _loop(key) {\n\t        var singleResolver = {\n\t            key: key,\n\t            promise: null,\n\t            value: null\n\t        };\n\t        singleResolver.promise = aMap[key].then(function (v) {\n\t            return singleResolver.value = v;\n\t        });\n\t        resolvers.push(singleResolver);\n\t    };\n\t\n\t    for (var key in aMap) {\n\t        _loop(key);\n\t    }\n\t\n\t    return Promise.all(resolvers.map(function (resolver) {\n\t        return resolver.promise;\n\t    })).then(function () {\n\t        var result = {};\n\t        resolvers.forEach(function (resolver) {\n\t            return result[resolver.key] = resolver.value;\n\t        });\n\t        return result;\n\t    });\n\t}\n\t\n\tfunction resolveDeps(modulesNames, allModules) {\n\t    if (modulesNames.length === 0) {\n\t        return Promise.resolve([]);\n\t    }\n\t\n\t    try {\n\t        return Promise.all(pickDeps(modulesNames, allModules));\n\t    } catch (e) {\n\t        return Promise.reject(e.message);\n\t    }\n\t}\n\t\n\tfunction getInjector() {\n\t    var modulesRepository = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t    var clonedRepository = _extends({}, modulesRepository);\n\t\n\t    var injector = function injector(nextModuleGetter) {\n\t        return nextModuleGetter(clonedRepository);\n\t    };\n\t\n\t    injector.then = function (success, failure) {\n\t        return resolveMap(clonedRepository).then(success, failure);\n\t    };\n\t    injector.catch = function (failure) {\n\t        return resolveMap(clonedRepository).catch(failure);\n\t    };\n\t\n\t    return injector;\n\t}\n\t\n\t/**\n\t * Returns an Array of strings for a string with comma separated values\n\t * @param {string|string[]} injects\n\t * @returns {string[]}\n\t */\n\tfunction normalizeInjects(injects) {\n\t    if (typeof injects === 'string') {\n\t        return injects.split(',').map(function (s) {\n\t            return s.trim();\n\t        }).filter(function (s) {\n\t            return !!s;\n\t        });\n\t    } else if ((typeof injects === 'undefined' ? 'undefined' : _typeof(injects)) === 'object' && injects instanceof Array) {\n\t        return injects;\n\t    }\n\t\n\t    return [];\n\t}\n\t\n\t/**\n\t *\n\t * @param {string} moduleName\n\t * @optional\n\t * @param {string|string[]} moduleInjects\n\t * @param {function} moduleDefinition\n\t * @returns {function}\n\t */\n\tfunction ddi(moduleName, moduleInjects, moduleDefinition) {\n\t\n\t    /** @type {Array} */\n\t    var moduleInjectsNormalized = void 0;\n\t\n\t    if (typeof moduleInjects === 'function') {\n\t        moduleDefinition = moduleInjects;\n\t        moduleInjectsNormalized = normalizeInjects(moduleDefinition.$inject);\n\t    } else {\n\t        moduleInjectsNormalized = normalizeInjects(moduleInjects);\n\t    }\n\t\n\t    function ddiGetter() {\n\t        var modulesRepository = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\t\n\t\n\t        var deps = resolveDeps(moduleInjectsNormalized, modulesRepository);\n\t\n\t        ddi.logger && deps.catch(function (error) {\n\t            return ddi.logger.error(error);\n\t        });\n\t\n\t        modulesRepository[moduleName] = deps.then(function (resolvedDeps) {\n\t            return moduleDefinition.apply(null, resolvedDeps);\n\t        });\n\t\n\t        return getInjector(modulesRepository);\n\t    };\n\t\n\t    return ddiGetter;\n\t}\n\t\n\tddi.inject = ddi.getInjector = getInjector;\n\t\n\tddi.logger = null;\n\t\n\texports.default = ddi;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** deferred-di.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 16e0004b60b6655be079\n **/","function pickDeps(moduleNames, allModules) {\n    return moduleNames.map(name => {\n        if (allModules[name]) {\n            return allModules[name];\n        } else {\n            throw new Error(`${name} cannot be resolved`);\n        }\n    });\n}\n\nfunction resolveMap(aMap) {\n    let resolvers = [];\n    for (let key in aMap) {\n        let singleResolver = {\n            key,\n            promise: null,\n            value: null,\n        };\n        singleResolver.promise = aMap[key].then(v => singleResolver.value = v);\n        resolvers.push(singleResolver);\n    }\n\n    return Promise.all(resolvers.map(resolver => resolver.promise)).then(() => {\n        let result = {};\n        resolvers.forEach(resolver => result[resolver.key] = resolver.value);\n        return result;\n    });\n}\n\nfunction resolveDeps(modulesNames, allModules) {\n    if (modulesNames.length === 0) {\n        return Promise.resolve([]);\n    }\n\n    try {\n        return Promise.all(pickDeps(modulesNames, allModules));\n    } catch (e) {\n        return Promise.reject(e.message);\n    }\n}\n\nfunction getInjector(modulesRepository = {}) {\n    const clonedRepository = {\n        ...modulesRepository,\n    };\n\n    let injector = function injector(nextModuleGetter) {\n        return nextModuleGetter(clonedRepository);\n    };\n\n    injector.then = (success, failure) => resolveMap(clonedRepository).then(success, failure);\n    injector.catch = (failure) => resolveMap(clonedRepository).catch(failure);\n\n    return injector;\n}\n\n/**\n * Returns an Array of strings for a string with comma separated values\n * @param {string|string[]} injects\n * @returns {string[]}\n */\nfunction normalizeInjects(injects) {\n    if (typeof injects === 'string') {\n        return injects\n            .split(',')\n            .map(s => s.trim())\n            .filter(s => !!s);\n    } else if (typeof injects === 'object' && injects instanceof Array) {\n        return injects;\n    }\n\n    return [];\n}\n\n/**\n *\n * @param {string} moduleName\n * @optional\n * @param {string|string[]} moduleInjects\n * @param {function} moduleDefinition\n * @returns {function}\n */\nfunction ddi(moduleName,\n             moduleInjects,\n             moduleDefinition) {\n\n    /** @type {Array} */\n    let moduleInjectsNormalized;\n\n    if (typeof moduleInjects === 'function') {\n        moduleDefinition = moduleInjects;\n        moduleInjectsNormalized = normalizeInjects(moduleDefinition.$inject);\n    } else {\n        moduleInjectsNormalized = normalizeInjects(moduleInjects);\n    }\n\n    function ddiGetter(modulesRepository = {}) {\n\n        let deps = resolveDeps(\n            moduleInjectsNormalized,\n            modulesRepository\n        );\n\n        ddi.logger && deps.catch(error => ddi.logger.error(error));\n\n        modulesRepository[moduleName] = deps\n            .then(resolvedDeps => moduleDefinition.apply(null, resolvedDeps));\n\n        return getInjector(modulesRepository);\n\n    };\n\n    return ddiGetter;\n\n}\n\nddi.inject = ddi.getInjector = getInjector;\n\nddi.logger = null;\n\nexport default ddi;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/"],"sourceRoot":""}